<%- include('../../views/partials/admin/header', {title: 'Order detail'}) %>

<style>
    .hide-scrollbar::-webkit-scrollbar {
        display: none;
    }
    .hide-scrollbar {
        -ms-overflow-style: none; /* IE and Edge */
        scrollbar-width: none; /* Firefox */
    }
    /* Status dropdown hover effect */
    .status-select {
        transition: background-color 0.2s ease;
    }
    .status-select:hover {
        background-color: #e5e7eb; /* Tailwind gray-200 */
    }
    /* Date input styling */
    input[type="date"] {
        -webkit-appearance: none;
        appearance: none;
    }
    input[type="date"]::-webkit-calendar-picker-indicator {
        filter: invert(0.5);
    }
    /* Button transitions */
    .btn {
        transition: background-color 0.3s ease, transform 0.1s ease;
    }
    .btn:hover {
        transform: translateY(-1px);
    }
    /* Table row hover effect */
    .table-row:hover {
        background-color: #f9fafb; /* Tailwind gray-50 */
    }
    /* Placeholder text color */
    input::placeholder {
        color: #1f2937; /* Tailwind gray-800 (black-like) */
        opacity: 1; /* Ensure placeholder color is consistent */
    }
</style>

<!-- Main Content -->
<main class="container mx-auto p-4 sm:p-6">
    <!-- Header -->
    <header class="bg-white text-black p-4">
        <div class="container mx-auto">
            <h1 class="text-xl sm:text-2xl font-bold tracking-wide">Admin Order Management</h1>
        </div>
    </header>

    <!-- Right-aligned Section for Button and Search -->
    <div class="flex justify-end gap-4 mb-6">
        <!-- Back to Dashboard Button -->
        <div>
            <a href="/admin/dashboard" class="inline-block bg-gray-700 text-white px-5 py-2 rounded-lg hover:bg-gray-600 text-sm sm:text-base btn shadow-sm">Back to Dashboard</a>
        </div>

        <!-- Search Section -->
        <div class="bg-white shadow-md rounded-lg p-4 w-1/4">
            <h2 class="text-lg font-semibold mb-2 text-gray-800">Search Orders</h2>
            <div class="flex flex-row gap-2">
                <input type="text" id="search-user" placeholder="Search by User Name" class="border border-gray-300 rounded-lg p-1 text-xs text-black focus:outline-none focus:ring-2 focus:ring-gray-400 transition-shadow duration-200 hover:shadow-md flex-1">
                <input type="date" id="search-date" class="border border-gray-300 rounded-lg p-1 text-xs text-black focus:outline-none focus:ring-2 focus:ring-gray-400 transition-shadow duration-200 hover:shadow-md w-28" max="2025-05-30">
                <button onclick="searchOrders()" class="bg-gray-700 text-white px-3 py-1 rounded-lg hover:bg-gray-600 text-xs btn shadow-sm">Search</button>
            </div>
        </div>
    </div>

    <!-- Orders Table -->
    <div class="bg-white shadow-md rounded-lg overflow-hidden border">
        <div class="p-4 sm:p-6">
            <h2 class="text-lg sm:text-xl font-semibold mb-4 text-gray-800">Orders</h2>

            <div class="overflow-x-auto hide-scrollbar">
                <% if (orders && orders.length > 0) { %>
                    <table class="min-w-full divide-y divide-gray-200">
                        <thead class="bg-gray-50">
                            <tr>
                                <th class="px-4 py-3 text-left text-xs sm:text-sm font-medium text-gray-500 uppercase tracking-wider">Order ID</th>
                                <th class="px-4 py-3 text-left text-xs sm:text-sm font-medium text-gray-500 uppercase tracking-wider">User Name</th>
                                <th class="px-4 py-3 text-left text-xs sm:text-sm font-medium text-gray-500 uppercase tracking-wider">Ordered Date</th>
                                <th class="px-4 py-3 text-left text-xs sm:text-sm font-medium text-gray-500 uppercase tracking-wider">Total Amount</th>
                                <th class="px-4 py-3 text-left text-xs sm:text-sm font-medium text-gray-500 uppercase tracking-wider">Total Items</th>
                                <th class="px-4 py-3 text-left text-xs sm:text-sm font-medium text-gray-500 uppercase tracking-wider">Payment Method</th>
                                <th class="px-4 py-3 text-left text-xs sm:text-sm font-medium text-gray-500 uppercase tracking-wider">Status</th>
                                <th class="px-4 py-3 text-left text-xs sm:text-sm font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                                <th class="px-4 py-3 text-left text-xs sm:text-sm font-medium text-gray-500 uppercase tracking-wider">View</th>
                            </tr>
                        </thead>
                        <tbody class="bg-white divide-y divide-gray-200">
                            <% orders.forEach(order => { %>
                            <tr class="table-row transition-colors duration-200">
                                <td class="px-4 py-4 whitespace-nowrap text-sm sm:text-base text-gray-900"><%= order.orderId %></td>
                                <td class="px-4 py-4 whitespace-nowrap text-sm sm:text-base text-gray-900"><%= order.userName %></td>
                                <td class="px-4 py-4 whitespace-nowrap text-sm sm:text-base text-gray-900"><%= order.orderedDate %></td>
                                <td class="px-4 py-4 whitespace-nowrap text-sm sm:text-base text-gray-900"><%= order.totalAmount %></td>
                                <td class="px-4 py-4 whitespace-nowrap text-sm sm:text-base text-gray-900"><%= order.totalItems %></td>
                                <td class="px-4 py-4 whitespace-nowrap text-sm sm:text-base text-gray-900"><%= order.paymentMethod %></td>
                                <td class="px-4 py-4 whitespace-nowrap">
                                    <span id="status-<%= order.orderId %>" class="px-2 py-1 text-xs sm:text-sm font-semibold rounded-full text-white <%= order.orderStatus === 'Pending' ? 'bg-yellow-500' : order.orderStatus === 'Processing' ? 'bg-blue-500' : order.orderStatus === 'Shipped' ? 'bg-indigo-500' : order.orderStatus === 'Delivered' ? 'bg-green-500' : order.orderStatus === 'Returned' ? 'bg-orange-500' : 'bg-red-500' %>">
                                        <%= order.orderStatus %>
                                    </span>
                                </td>
                                <td class="px-4 py-4 whitespace-nowrap text-black text-sm sm:text-base">
                                    <select id="status-select-<%= order.orderId %>" onchange="updateStatus('<%= order.orderId %>')" class="status-select border border-gray-300 rounded-lg p-1 text-sm focus:outline-none focus:ring-2 focus:ring-gray-400">
                                        <option value="Pending" <%= order.orderStatus === 'Pending' ? 'selected' : '' %>>Pending</option>
                                        <option value="Processing" <%= order.orderStatus === 'Processing' ? 'selected' : '' %>>Processing</option>
                                        <option value="Shipped" <%= order.orderStatus === 'Shipped' ? 'selected' : '' %>>Shipped</option>
                                        <option value="Delivered" <%= order.orderStatus === 'Delivered' ? 'selected' : '' %>>Delivered</option>
                                        <option value="Returned" <%= order.orderStatus === 'Returned' ? 'selected' : '' %>>Returned</option>
                                        <option value="Canceled" <%= order.orderStatus === 'Canceled' ? 'selected' : '' %>>Canceled</option>
                                    </select>
                                </td>
                                <td class="px-4 py-4 whitespace-nowrap text-sm sm:text-base">
                                    <button class="bg-gray-700 text-white px-3 py-1 rounded-lg hover:bg-gray-600 text-sm btn shadow-sm">View Details</button>
                                </td>
                            </tr>
                            <% }) %>
                        </tbody>
                    </table>
                <% } else { %>
                    <div id="no-orders" class="text-center text-gray-500 py-6">
                        <p class="text-lg">No orders found</p>
                    </div>
                <% } %>
            </div>
        </div>
    </div>
</main>

<%- include('../../views/partials/admin/footer') %>

<script>
    // Orders data from server-side
    const allOrders = <%- JSON.stringify(orders || []) %>;

    // Function to render orders in the table
    function renderOrders(orders) {
        const tableBody = document.querySelector('table tbody');
        const noOrdersDiv = document.getElementById('no-orders');

        if (!orders || orders.length === 0) {
            if (tableBody) tableBody.parentElement.style.display = 'none';
            if (noOrdersDiv) noOrdersDiv.style.display = 'block';
            return;
        }

        if (tableBody) tableBody.parentElement.style.display = 'table';
        if (noOrdersDiv) noOrdersDiv.style.display = 'none';

        if (tableBody) {
            tableBody.innerHTML = ''; // Clear existing rows
            orders.forEach(order => {
                const statusColor = {
                    'Pending': 'bg-yellow-500',
                    'Processing': 'bg-blue-500',
                    'Shipped': 'bg-indigo-500',
                    'Delivered': 'bg-green-500',
                    'Returned': 'bg-orange-500',
                    'Canceled': 'bg-red-500'
                }[order.orderStatus] || 'bg-gray-500';

                const row = `
                    <tr class="table-row transition-colors duration-200">
                        <td class="px-4 py-4 whitespace-nowrap text-sm sm:text-base text-gray-900">${order.orderId}</td>
                        <td class="px-4 py-4 whitespace-nowrap text-sm sm:text-base text-gray-900">${order.userName}</td>
                        <td class="px-4 py-4 whitespace-nowrap text-sm sm:text-base text-gray-900">${order.orderedDate}</td>
                        <td class="px-4 py-4 whitespace-nowrap text-sm sm:text-base text-gray-900">${order.totalAmount}</td>
                        <td class="px-4 py-4 whitespace-nowrap text-sm sm:text-base text-gray-900">${order.totalItems}</td>
                        <td class="px-4 py-4 whitespace-nowrap text-sm sm:text-base text-gray-900">${order.paymentMethod}</td>
                        <td class="px-4 py-4 whitespace-nowrap">
                            <span id="status-${order.orderId}" class="px-2 py-1 text-xs sm:text-sm font-semibold rounded-full text-white ${statusColor}">${order.orderStatus}</span>
                        </td>
                        <td class="px-4 py-4 whitespace-nowrap text-black text-sm sm:text-base">
                            <select id="status-select-${order.orderId}" onchange="updateStatus('${order.orderId}')" class="status-select border border-gray-300 rounded-lg p-1 text-sm focus:outline-none focus:ring-2 focus:ring-gray-400">
                                <option value="Pending" ${order.orderStatus === 'Pending' ? 'selected' : ''}>Pending</option>
                                <option value="Processing" ${order.orderStatus === 'Processing' ? 'selected' : ''}>Processing</option>
                                <option value="Shipped" ${order.orderStatus === 'Shipped' ? 'selected' : ''}>Shipped</option>
                                <option value="Delivered" ${order.orderStatus === 'Delivered' ? 'selected' : ''}>Delivered</option>
                                <option value="Returned" ${order.orderStatus === 'Returned' ? 'selected' : ''}>Returned</option>
                                <option value="Canceled" ${order.orderStatus === 'Canceled' ? 'selected' : ''}>Canceled</option>
                            </select>
                        </td>
                        <td class="px-4 py-4 whitespace-nowrap text-sm sm:text-base">
                            <button class="bg-gray-700 text-white px-3 py-1 rounded-lg hover:bg-gray-600 text-sm btn shadow-sm">View Details</button>
                        </td>
                    </tr>
                `;
                tableBody.innerHTML += row;
            });
        }
    }

    // Initial render of orders
    renderOrders(allOrders);

    // Function to search orders
    function searchOrders() {
        const searchUser = document.getElementById('search-user').value.toLowerCase();
        const searchDate = document.getElementById('search-date').value;

        const filteredOrders = allOrders.filter(order => {
            const matchesUser = searchUser ? order.userName.toLowerCase().includes(searchUser) : true;
            const matchesDate = searchDate ? order.orderedDate === searchDate : true;
            return matchesUser && matchesDate;
        });

        renderOrders(filteredOrders);
    }

    // Function to update order status
    async function updateStatus(orderId) {
        const select = document.getElementById(`status-select-${orderId}`);
        const newStatus = select.value;

        try {
            const response = await fetch(`/admin/orders/status/${orderId}`, {
                method: 'PATCH',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ status: newStatus })
            });

            if (!response.ok) {
                throw new Error('Failed to update status');
            }

            const data = await response.json();
            const statusSpan = document.getElementById(`status-${orderId}`);
            statusSpan.textContent = newStatus;
            const statusColor = {
                'Pending': 'bg-yellow-500',
                'Processing': 'bg-blue-500',
                'Shipped': 'bg-indigo-500',
                'Delivered': 'bg-green-500',
                'Returned': 'bg-orange-500',
                'Canceled': 'bg-red-500'
            }[newStatus] || 'bg-gray-500';
            statusSpan.className = `px-2 py-1 text-xs sm:text-sm font-semibold rounded-full text-white ${statusColor}`;

            // Update local orders array
            const order = allOrders.find(o => o.orderId === orderId);
            if (order) {
                order.orderStatus = newStatus;
            }
        } catch (error) {
            console.error('Error updating status:', error);
            alert('Failed to update status. Please try again.');
            // Revert select to original status
            const order = allOrders.find(o => o.orderId === orderId);
            if (order) {
                select.value = order.orderStatus;
            }
        }
    }
</script>