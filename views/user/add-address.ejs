<%- include('../../views/partials/user/header', {title: 'Add Address'}) %>

<!-- Main Content -->
<main class="flex-grow container mx-auto py-8 px-4 flex flex-col items-center relative">
    <!-- Back Button in Top-Right Corner -->
    <button onclick="window.location.href='/getAddress'" class="absolute top-8 right-4 bg-gold text-dark-bg font-semibold py-2 px-4 rounded hover:bg-yellow-300 transition-all duration-200 shadow hover:shadow-gold-glow">
        BACK
    </button>

    <!-- Page Title -->
    <h1 class="text-3xl font-bold text-dark-bg mb-8 text-center">Add New Address</h1>


    <!-- Error/Success Message Container -->
    <div id="error-message" class="hidden w-full max-w-lg text-center p-4 mb-4 text-red-700 bg-red-100 rounded-lg"></div>

    <!-- Address Form -->
    <form id="addAddressForm" class="bg-white border border-gray-200 rounded-lg p-6 w-full max-w-lg shadow-md">
        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
            <!-- Type -->
            <div class="flex flex-col">
                <label for="addressType" class="text-dark-bg font-semibold mb-2">Type</label>
                <select id="addressType" name="addressType" class="border border-gray-300 rounded-lg p-3 text-gray-700 focus:outline-none focus:ring-2 focus:ring-gold transition-all duration-200" required>
                    <option value="" disabled selected>Select Address Type</option>
                    <option value="Home">Home</option>
                    <option value="Work">Work</option>
                    <option value="Other">Other</option>
                </select>
            </div>

            <!-- Name -->
            <div class="flex flex-col">
                <label for="name" class="text-dark-bg font-semibold mb-2">Name</label>
                <input type="text" id="name" name="name" class="border border-gray-300 rounded-lg p-3 text-gray-700 focus:outline-none focus:ring-2 focus:ring-gold transition-all duration-200" placeholder="Enter your name" required>
            </div>

            <!-- Building Name -->
            <div class="flex flex-col">
                <label for="buildingName" class="text-dark-bg font-semibold mb-2">Building Name</label>
                <input type="text" id="buildingName" name="buildingName" class="border border-gray-300 rounded-lg p-3 text-gray-700 focus:outline-none focus:ring-2 focus:ring-gold transition-all duration-200" placeholder="Enter building name" required>
            </div>

            <!-- Number -->
            <div class="flex flex-col">
                <label for="phone" class="text-dark-bg font-semibold mb-2">Number</label>
                <input type="tel" id="phone" name="phone" class="border border-gray-300 rounded-lg p-3 text-gray-700 focus:outline-none focus:ring-2 focus:ring-gold transition-all duration-200" placeholder="Enter phone number" required>
            </div>

            <!-- Pin -->
            <div class="flex flex-col">
                <label for="pincode" class="text-dark-bg font-semibold mb-2">Pin</label>
                <input type="text" id="pincode" name="pincode" class="border border-gray-300 rounded-lg p-3 text-gray-700 focus:outline-none focus:ring-2 focus:ring-gold transition-all duration-200" placeholder="Enter pincode" required>
            </div>

            <!-- Landmark -->
            <div class="flex flex-col">
                <label for="landMark" class="text-dark-bg font-semibold mb-2">Landmark</label>
                <input type="text" id="landMark" name="landMark" class="border border-gray-300 rounded-lg p-3 text-gray-700 focus:outline-none focus:ring-2 focus:ring-gold transition-all duration-200" placeholder="Enter landmark" required>
            </div>

            <!-- City/District/Town -->
            <div class="flex flex-col">
                <label for="city" class="text-dark-bg font-semibold mb-2">City/District/Town</label>
                <input type="text" id="city" name="city" class="border border-gray-300 rounded-lg p-3 text-gray-700 focus:outline-none focus:ring-2 focus:ring-gold transition-all duration-200" placeholder="Enter city/district/town" required>
            </div>

            <!-- State -->
            <div class="flex flex-col">
                <label for="state" class="text-dark-bg font-semibold mb-2">State</label>
                <input type="text" id="state" name="state" class="border border-gray-300 rounded-lg p-3 text-gray-700 focus:outline-none focus:ring-2 focus:ring-gold transition-all duration-200" placeholder="Enter state" required>
            </div>
        </div>

        <!-- Form Buttons -->
        <div class="flex justify-center gap-4 mt-6">
            <button type="submit" class="bg-black text-white font-semibold py-2 px-6 rounded transition-all duration-200">
                Save
            </button>
            <button type="reset" class="bg-cyan-500 text-white font-semibold py-2 px-6 rounded hover:bg-cyan-600 transition-all duration-200">
                Clear
            </button>
        </div>
    </form>
</main>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
document.addEventListener("DOMContentLoaded", () => {
    const addAddressForm = document.getElementById('addAddressForm');
    const submitBtn = document.getElementById('submitBtn');
    const resetBtn = document.getElementById('resetBtn');
    const errorMessage = document.getElementById('error-message');

    addAddressForm.reset();

    addAddressForm.addEventListener('submit', async (event) => {
        event.preventDefault();

        const formData = new FormData(addAddressForm);
        const addressData = {
            addressType: formData.get('addressType'),
            name: formData.get('name'),
            buildingName: formData.get('buildingName'),
            phone: formData.get('phone'),
            pincode: formData.get('pincode'),
            landMark: formData.get('landMark'),
            city: formData.get('city'),
            state: formData.get('state')
        };

        setInterval(() => {
             errorMessage.classList.add('hidden');
        }, 5000);

// Client-side validation
if (!/^\d+$/.test(addressData.pincode)) {
    errorMessage.textContent = 'Pincode must be a valid number';
    errorMessage.classList.remove('hidden');
    submitBtn.disabled = false;
    submitBtn.textContent = 'Save';
    return;
} else if (!/^(?!000000)\d{6}$/.test(addressData.pincode)) {
    errorMessage.textContent = 'Pincode must be a valid 6-digit number and not all zeros';
    errorMessage.classList.remove('hidden');
    submitBtn.disabled = false;
    submitBtn.textContent = 'Save';
    return;
} else if (!/^\d{10}$/.test(addressData.phone)) {
    errorMessage.textContent = 'Phone number must be exactly 10 digits';
    errorMessage.classList.remove('hidden');
    submitBtn.disabled = false;
    submitBtn.textContent = 'Save';
    return;
} else if (!/^[6-9]/.test(addressData.phone)) {
    errorMessage.textContent = 'Phone number must start with 6, 7, 8, or 9';
    errorMessage.classList.remove('hidden');
    submitBtn.disabled = false;
    submitBtn.textContent = 'Save';
    return;
} else if (!/^[A-Za-z]+( [A-Za-z]+)?$/.test(addressData.name)) {
    errorMessage.textContent = 'Username must contain only letters and no numbers';
    errorMessage.classList.remove('hidden');
    submitBtn.disabled = false;
    submitBtn.textContent = 'Save';
    return;
} else if (
    /^[+\-*/_]/.test(addressData.state) ||
    /^[+\-*/_]/.test(addressData.city) ||
    /^[+\-*/_]/.test(addressData.landMark) ||
    /^[+\-*/_]/.test(addressData.buildingName)
) {
    errorMessage.textContent = 'Fields cannot start with +, -, *, /, or _';
    errorMessage.classList.remove('hidden');
    submitBtn.disabled = false;
    submitBtn.textContent = 'Save';
    return;
}

        
        

        try {
            const response = await fetch('/addAddress', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(addressData)
            });

            const result = await response.json();

            if (response.ok) {
                await Swal.fire({
                    toast: true,
                    position: 'center',
                    icon: 'success',
                    title: result.message,
                    showConfirmButton: false,
                    timer: 3000
                });
                window.location.replace('/getAddress');
            } else {
                await Swal.fire({
                    toast: true,
                    position: 'center',
                    icon: 'error',
                    title: result.message,
                    showConfirmButton: false,
                    timer: 3000
                });
            }
        } catch (error) {
            console.error('Error submitting form:', error);
            alert('An error occurred while adding the address. Please try again.');
        }
    });
});
</script>

<%- include('../../views/partials/user/footer') %>